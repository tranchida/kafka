apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }}
  serviceName: {{ .Release.Name }}-service-headless
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app:  {{ .Release.Name }} 
    spec:        
      containers:
      - name: {{ .Release.Name }}
        image: apache/kafka:3.7.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: controller
          containerPort: 9093
          protocol: TCP
        - name: client
          containerPort: 9092
          protocol: TCP
        - name: interbroker
          containerPort: 9094
          protocol: TCP
        - name: external
          containerPort: 9095
          protocol: TCP
        command: [ "/bin/sh", "-c"]
        args: 
          - | 
            KAFKA_NODE_ID=$(echo $HOSTNAME | grep -o '[^-]*$')
            echo "L'index de ce Pod est: $KAFKA_NODE_ID"
            export KAFKA_NODE_ID
            KAFKA_ADVERTISED_LISTENERS=$(eval echo 'CLIENT://{{ .Release.Name }}-controller-$KAFKA_NODE_ID.kafka-controller-headless:9092,INTERNAL://{{ .Release.Name }}-controller-$KAFKA_NODE_ID.{{ .Release.Name }}-controller-headless:9094,EXTERNAL://{{ .Values.loadbalancerBaseIP }}$KAFKA_NODE_ID:9094')
            echo "advertised.listeners=$KAFKA_ADVERTISED_LISTENERS"
            export KAFKA_ADVERTISED_LISTENERS
            #while true; do echo hello; sleep 10;done
            exec /etc/kafka/docker/run
        #args: [ "while true; do echo hello; sleep 10;done" ]
        env:
        - name: CLUSTER_ID
          value: '4L6g3nShT-eMCtK--X86sw'
        # on espère que cette fonctionnalité (k8s 1.28) sera disponible prochainement dans openshift
        # - name: KAFKA_NODE_ID
        #   valueFrom:
        #     fieldRef:
        #       fieldPath: metadata.labels['apps.kubernetes.io/pod-index']
          #value: '0'
        - name: KAFKA_CONTROLLER_QUORUM_VOTERS
          {{- $list := "" -}}
          {{- range $i := until ( .Values.replicas | int)}}
            {{- if $i }}
              {{- $list = print $list "," (printf "%d@%s-%d.%s-service-headless:9093" $i $.Release.Name $i $.Release.Name ) -}}
            {{- else }}
              {{- $list = printf "%d@%s-%d.%s-service-headless:9093" $i $.Release.Name $i $.Release.Name -}}
            {{- end }}
          {{- end }}
          value: "{{ $list }}"
          #value: '0@esb-kafka-0:9093'
        - name: KAFKA_LISTENERS
          value: 'CLIENT://:9092,INTERNAL://:9094,EXTERNAL://:9095,CONTROLLER://:9093'
        - name: KAFKA_PROCESS_ROLES
          value: 'broker,controller'
        resources:
          requests:
              memory: 1Gi
              cpu: "1"
          limits:
              memory: 2Gi
              cpu: "1"         
        volumeMounts:
        - name: config
          mountPath: /opt/kafka/config
        - name: log
          mountPath: /opt/kafka/logs
        - name: data
          mountPath: /var/log/kafka
        - name: server-config
          mountPath: /mnt/shared/config/server.properties
          subPath: server.properties
      securityContext:
        runAsUser: 101
        runAsGroup: 101
        fsGroup: 101
      volumes:
      - name: server-config
        configMap:
          name: {{.Release.Name}}-server-config
  volumeClaimTemplates:
  - metadata:
      name: config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Mi
  - metadata:
      name: log
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Mi
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi